diff --git a/build/make/ads2gas_apple.pl b/build/make/ads2gas_apple.pl
index a82f3eb..74e45a2 100755
--- a/build/make/ads2gas_apple.pl
+++ b/build/make/ads2gas_apple.pl
@@ -18,7 +18,7 @@
 # Usage: cat inputfile | perl ads2gas_apple.pl > outputfile
 #
 
-my $chromium = 0;
+my $chromium = 1;
 
 foreach my $arg (@ARGV) {
     $chromium = 1 if ($arg eq "-chromium");
diff --git a/build/make/configure.sh b/build/make/configure.sh
index 25c9f80..507df2f 100644
--- a/build/make/configure.sh
+++ b/build/make/configure.sh
@@ -743,7 +743,7 @@ process_common_toolchain() {
   # platforms, so use the newest one available.
   case ${toolchain} in
     *-darwin*)
-      osx_sdk_dir="$(show_darwin_sdk_path macosx)"
+      osx_sdk_dir="$(show_darwin_sdk_path iphoneos)"
       if [ -d "${osx_sdk_dir}" ]; then
         add_cflags  "-isysroot ${osx_sdk_dir}"
         add_ldflags "-isysroot ${osx_sdk_dir}"
diff --git a/build/make/iosbuild.sh b/build/make/iosbuild.sh
index 89fa681..764e450 100755
--- a/build/make/iosbuild.sh
+++ b/build/make/iosbuild.sh
@@ -9,10 +9,10 @@
 ##  be found in the AUTHORS file in the root of the source tree.
 ##
 ##
-## This script generates 'VPX.framework'. An iOS app can encode and decode VPx
-## video by including 'VPX.framework'.
+## This script generates 'vpx.framework'. An iOS app can encode and decode VPx
+## video by including 'vpx.framework'.
 ##
-## Run iosbuild.sh to create 'VPX.framework' in the current directory.
+## Run iosbuild.sh to create 'vpx.framework' in the current directory.
 ##
 set -e
 devnull='> /dev/null 2>&1'
@@ -23,7 +23,7 @@ CONFIGURE_ARGS="--disable-docs
                 --disable-libyuv
                 --disable-unit-tests"
 DIST_DIR="_dist"
-FRAMEWORK_DIR="VPX.framework"
+FRAMEWORK_DIR="vpx.framework"
 HEADER_DIR="${FRAMEWORK_DIR}/Headers/vpx"
 MAKE_JOBS=1
 SCRIPT_DIR=$(dirname "$0")
@@ -47,9 +47,9 @@ build_target() {
   mkdir "${target}"
   cd "${target}"
   eval "${LIBVPX_SOURCE_DIR}/configure" --target="${target}" \
-    ${CONFIGURE_ARGS} ${EXTRA_CONFIGURE_ARGS} ${devnull}
+    ${CONFIGURE_ARGS} ${EXTRA_CONFIGURE_ARGS} 
   export DIST_DIR
-  eval make -j ${MAKE_JOBS} dist ${devnull}
+  eval make -j ${MAKE_JOBS} dist
   cd "${old_pwd}"
 
   vlog "***Done building target: ${target}***"
@@ -113,7 +113,7 @@ create_vpx_framework_config_shim() {
     preproc_symbol=$(target_to_preproc_symbol "${target}")
     printf " ${preproc_symbol}\n" >> "${config_file}"
     printf "#define VPX_FRAMEWORK_TARGET \"${target}\"\n" >> "${config_file}"
-    printf "#include \"VPX/vpx/${target}/vpx_config.h\"\n" >> "${config_file}"
+    printf "#include \"vpx/vpx/${target}/vpx_config.h\"\n" >> "${config_file}"
     printf "#elif defined" >> "${config_file}"
     mkdir "${HEADER_DIR}/${target}"
     cp -p "${BUILD_ROOT}/${target}/vpx_config.h" "${HEADER_DIR}/${target}"
@@ -127,7 +127,7 @@ create_vpx_framework_config_shim() {
 }
 
 # Configures and builds each target specified by $1, and then builds
-# VPX.framework.
+# vpx.framework.
 build_framework() {
   local lib_list=""
   local targets="$1"
@@ -156,22 +156,22 @@ build_framework() {
   cp -p "${target_dist_dir}"/include/vpx/* "${HEADER_DIR}"
 
   # Build the fat library.
-  ${LIPO} -create ${lib_list} -output ${FRAMEWORK_DIR}/VPX
+  ${LIPO} -create ${lib_list} -output ${FRAMEWORK_DIR}/vpx
 
   # Create the vpx_config.h shim that allows usage of vpx_config.h from
-  # within VPX.framework.
+  # within vpx.framework.
   create_vpx_framework_config_shim "${targets}"
 
   # Copy in vpx_version.h.
   cp -p "${BUILD_ROOT}/${target}/vpx_version.h" "${HEADER_DIR}"
 
-  vlog "Created fat library ${FRAMEWORK_DIR}/VPX containing:"
+  vlog "Created fat library ${FRAMEWORK_DIR}/vpx containing:"
   for lib in ${lib_list}; do
     vlog "  $(echo ${lib} | awk -F / '{print $2, $NF}')"
   done
 
   # TODO(tomfinegan): Verify that expected targets are included within
-  # VPX.framework/VPX via lipo -info.
+  # vpx.framework/vpx via lipo -info.
 }
 
 # Trap function. Cleans up the subtree used to build all targets contained in
